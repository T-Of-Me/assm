INCLUDE Irvine32.inc

.data
msg1 BYTE 'Nhap vao so he 10 la: ',0
msg2 BYTE 'So La Ma la: ',0
OUTPUT BYTE 50 DUP(0)

.code
main proc

    mov edx, offset msg1
    call writeString
    
    call readDec
    call crlf

    mov ebx, eax
    mov edi, offset OUTPUT 
    call L1


    mov edx, offset msg2
    call writeString
    mov edx, offset OUTPUT
    call writeString

main endp


L1 proc
   
 
    
    mov ecx, 1000   
    mov edx, 'M'         
    call L2
    
    mov ecx, 900
    mov edx, 'MC'
    call L2
    
    mov ecx, 500
    mov edx, 'D'
    call L2
    
    mov ecx, 400
    mov edx, 'DC'
    call L2
    
    mov ecx, 100
    mov edx, 'C'
    call L2
    
    mov ecx, 90
    mov edx, 'CX'
    call L2
    
    mov ecx, 50
    mov edx, 'L'
    call L2
    
    mov ecx, 40
    mov edx, 'LX'
    call L2
    
    mov ecx, 10
    mov edx, 'X'
    call L2
    
    mov ecx, 9
    mov edx, 'XI'
    call L2
    
    mov ecx, 5
    mov edx, 'V'
    call L2
    
    mov ecx, 4
    mov edx, 'VI'
    call L2
    
    mov ecx, 1
    mov edx, 'I'
    call L2

    ret
L1 endp


L2 proc

    L3:
        cmp ebx, ecx           ; 
        jl done               
        sub ebx, ecx           ; LUU  VAO EBX 
        mov [edi], edx           ;  
        inc edi              
        jmp L3         
    done:
        ret
L2 endp

end main
